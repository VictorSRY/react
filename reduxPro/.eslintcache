[{"D:\\react\\reduxPro\\src\\index.js":"1","D:\\react\\reduxPro\\src\\App.js":"2","D:\\react\\reduxPro\\src\\reportWebVitals.js":"3","D:\\react\\reduxPro\\src\\containers\\Counter\\Counter.js":"4","D:\\react\\reduxPro\\src\\components\\CounterControl\\CounterControl.js":"5","D:\\react\\reduxPro\\src\\components\\CounterOutput\\CounterOutput.js":"6","D:\\react\\reduxPro\\src\\store\\reducer\\result.js":"7","D:\\react\\reduxPro\\src\\store\\reducer\\counter.js":"8","D:\\react\\reduxPro\\src\\store\\actions\\actions.js":"9"},{"size":1266,"mtime":1607931888828,"results":"10","hashOfConfig":"11"},{"size":251,"mtime":1607669503483,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2472,"mtime":1607925669822,"results":"14","hashOfConfig":"11"},{"size":204,"mtime":1607668455284,"results":"15","hashOfConfig":"11"},{"size":223,"mtime":1607668446241,"results":"16","hashOfConfig":"11"},{"size":470,"mtime":1607925064129,"results":"17","hashOfConfig":"11"},{"size":556,"mtime":1607925062463,"results":"18","hashOfConfig":"11"},{"size":873,"mtime":1607932007389,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cp53u2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\reduxPro\\src\\index.js",[],"D:\\react\\reduxPro\\src\\App.js",[],["42","43"],"D:\\react\\reduxPro\\src\\reportWebVitals.js",[],"D:\\react\\reduxPro\\src\\containers\\Counter\\Counter.js",["44"],"\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CounterControl from '../../components/CounterControl/CounterControl';\r\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\r\nimport * as actions from '../../store/actions/actions';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        counter: 0\r\n    }\r\n\r\n    counterChangedHandler = ( action, value ) => {\r\n        switch ( action ) {\r\n            case 'inc':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter + 1 } } )\r\n                break;\r\n            case 'dec':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter - 1 } } )\r\n                break;\r\n            case 'add':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter + value } } )\r\n                break;\r\n            case 'sub':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter - value } } )\r\n                break;\r\n        }\r\n    }\r\n    render () {\r\n        console.log(this.props.result.length,this.props.result)\r\n        return (\r\n            <div>\r\n                <CounterOutput value={this.props.counter} />\r\n                <CounterControl label=\"Increment\" clicked={this.props.onIncrement} />\r\n                <CounterControl label=\"Decrement\" clicked={this.props.dicrement}  />\r\n                <CounterControl label=\"Add 5\" clicked={()=>this.props.add(5)}  />\r\n                <CounterControl label=\"Subtract 5\" clicked={()=>this.props.sub(5)}  />\r\n                <CounterControl label=\"add\" clicked={()=>this.props.saveResult(this.props.counter)}/>\r\n                <CounterControl label=\"delete\" clicked={()=>this.props.deleteResult(this.props.result.length - 1)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        counter:state.count.counter,\r\n        result:state.result.result\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch =>{\r\n    return {\r\n        onIncrement: () => dispatch(actions.increment()),\r\n        add: (val) => dispatch(actions.add(val)),\r\n        dicrement: () => dispatch(actions.dicrement()),\r\n        sub: (val) => dispatch(actions.sub(val)),\r\n        saveResult: (counter) => dispatch(actions.saveR(counter)),\r\n        deleteResult: (index) => dispatch(actions.deleteR(index))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Counter);","D:\\react\\reduxPro\\src\\components\\CounterControl\\CounterControl.js",[],"D:\\react\\reduxPro\\src\\components\\CounterOutput\\CounterOutput.js",[],"D:\\react\\reduxPro\\src\\store\\reducer\\result.js",["45"],"import * as actions from \"../actions/actions\"\r\nconst inistialState={\r\n    result:[]\r\n}\r\nconst result = (state=inistialState,action)=>{\r\n    console.log(state,action)\r\n    switch(action.type){\r\n        case actions.SAVE:return {...state,result:state.result.concat(action.counter)};\r\n        case actions.DELETE:const tempResults=state.result.filter((_,index)=>index!==action.index); return {...state,result:tempResults};\r\n    }\r\n    return state\r\n}\r\nexport default result","D:\\react\\reduxPro\\src\\store\\reducer\\counter.js",["46"],"import * as actions from \"../actions/actions\"\r\nconst inistialState={\r\n    counter:0,\r\n}\r\nconst counter = (state=inistialState,action)=>{\r\n    console.log(state,action)\r\n    switch(action.type){\r\n        case actions.INCREMENT :return {...state,counter:state.counter+1};\r\n        case actions.ADD:return {...state,counter:state.counter+action.value};\r\n        case actions.DICREMENT:return {...state,counter:state.counter-1};\r\n        case actions.SUB:return {...state,counter:state.counter-action.value};\r\n    }\r\n    return state\r\n}\r\nexport default counter","D:\\react\\reduxPro\\src\\store\\actions\\actions.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":14,"column":9,"nodeType":"53","messageId":"54","endLine":27,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":7,"column":5,"nodeType":"53","messageId":"54","endLine":10,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":7,"column":5,"nodeType":"53","messageId":"54","endLine":12,"endColumn":6},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]